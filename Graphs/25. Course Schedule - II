vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {
        int v = numCourses;
         vector<int> order;
         vector<int> inDegree(v,0);
       
        vector<vector<int>> adj(v);

        for(auto pre : prerequisites){
            int course = pre[0];
            int preCourse = pre[1];
            adj[preCourse].push_back(course);
            inDegree[course]++;
        }
        queue<int> q;
        for(int i=0; i<v; i++){
            if(inDegree[i]==0)
            q.push(i);
        }

        while(!q.empty()){
            int node = q.front();
            order.push_back(node);
            q.pop();

            for(auto adjNode : adj[node]){
                inDegree[adjNode]--;
                if(inDegree[adjNode]==0)
                    q.push(adjNode);
            }
        }
        if(order.size()==v)
            return order;
        return {};
    }
