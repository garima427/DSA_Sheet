bool detect(int i,vector<vector<int>> &adj,vector<int> &vis){
  vis[i]=1;
  
  queue<pair<int,int>> q;
  q.push({i,-1});
  while(!q.empty()){
    int node = q.front().first;
    int parent = q.front().second;
    q.pop();

    for(int adjNode:adj[node]){
      if(!vis[adjNode]){
        vis[adjNode]=1;
        q.push({adjNode,node});
      }
      else{
        if(parent!=adjNode){
          return true;
        }
      }
    }
  }
  return false;
}
bool isCycle(int n,vector<vector<int>> &adj){
  vector<int> vis(n+1,0);
  for(int i=1; i<=n; i++){
    if(!vis[i]){
      if(detect(i,adj,vis)) 
          return true;
    }
  }
  return false;
}
