void dfs(int r, int c, vector<vector<int>>& vis, vector<vector<int>>& grid){
  int n = gris.size();
  int m = grid[0].size();

  vis[r][c]=1;

  int dr[]={0,-1,0,1};
  int dc[]={-1,0,1,0};

  for(int i=0; i<4; i++){
    int nr = r+dr[i];
    int nc = c+dc[i];
    if(nr>=0 && nr<n &&  nc>=0 && nc<m && !vis[nr][nc] && grid[nr][nc])
      dfs(nr,nc,vis,grid);
  }
}

int numEnclaves(vector<vector<int>>& grid) {
  int n = grid.size();
  int m = grid[0].size();

  int enclaves = 0;
  vector<vector<int>> vis(n,vector<int>(m,0));

  for(int j=0; j<m; i++){
    if(grid[0][j]){
      dfs(0,j,vis,grid);
    }
    if(grid[n-1][j]){
      dfs(n-1,j,vis,grid);
    }
  }

  for(int i=0; i<n; i++){
    if(grid[i][0]){
      dfs(i,0,vis,grid);
    }
    if(grid[i][m-1]){
      dfs(i,m-1,vis,grid);
    }
  }

  for(int i=0; i<n; i++){
    for(int j=0; j<m; j++){
      if(!vis[i][j] && grid[i][j])
        enclaves++;
    }
  }
  return enclaves;
}
