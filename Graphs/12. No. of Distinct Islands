void dfs(int r, int c, int br, int bc, vector<vector<int>> &vis, vector<vector<int>> &grid,vector<pair<int,int>> &vec){
  int n = grid.size();
  int m = grid[0].size();

  vis[r][c]=1;
  vec.push_back({r-br,c-bc});
  
  int dr[]={0,-1,0,1};
  int dc[]={-1,0,1,0};
  for(int i=0;i<4;i++){
    int nr = r+dr[i];
    int nc = c+dc[i];
    if(nr>=0 && nr<n && nc>=0 && nc<m && !vis[nr][nc] && grid[nr][nc]){
      dfs(nr,nc,br,bc,vis,grid,vec);
    }
  }
}

int countIslands(vector<vector<int>> &grid){
  int n = grid.size();
  int m = grid[0].size();

  vector<vector<int>> vis(n,vector<int>(m,0));
  set<vector<pair<int,int>>> st;

  for(int i=0; i<n; i++){
    for(int j=0; j<m; j++){
      if(grid[i][j] && !vis[i][j]){
        vector<pair<int,int>> vec;
        dfs(i,j,i,j,vis,grid,vec);
        st.insert(vec);
      }
    }
  }
  return st.size();
}
