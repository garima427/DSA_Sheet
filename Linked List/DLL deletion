Node* deleteHead(Node* head){
  if(!head)
    return nullptr;

  if(!head->next){ 
        delete head;
        return nullptr;
  }

  Node* newHead = head->next;
  newHead->prev = nullptr;
  head->next = nullptr;
  
  delete head;
  return newHead;
}

Node* deleteTail(Node* head){
  if(!head)
    return nullptr;

  if(!head->next){ 
        delete head;
        return nullptr;
  }

  Node* temp = head;
  while(temp->next->next){
    temp= temp->next;
  }

  Node* todelete = temp->next;
  temp->next = nullptr;
  todelete->prev = nullptr;

  delete todelete;
  return head;
}

Node* delete(Node* head, int pos){
  if (pos <= 0 || !head) return head;

  if(pos==1)
    return deleteHead(head);

  int cnt = 1;
  Node* temp = head;
  while(temp && cnt<pos-1){
    temp= temp->next;
    cnt++;
  }

  if(!temp || !temp->next){
        return head;
  }

    Node* todelete = temp->next;
    Node* nextNode = todelete->next;

    temp->next = todelete->next;
    if(nextNode) nextNode->prev = temp;

    todelete->next = nullptr;
    todelete->prev = nulptr;

    delete todelete;
  
  return head;
}
