#include <bits/stdc++.h>
using namespace std;

int count_Energy(int n,vector<int> &height){
    int energy_prev2 = 0;
    int energy_prev = abs(height[1]-height[0]);
    int curr_energy;
    
    for(int i=2;i<=n;i++){
        int one_step = energy_prev + abs(height[i]-height[i-1]);
        int two_step = energy_prev2 + abs(height[i]-height[i-2]);
        
        curr_energy = min(one_step,two_step);
        
        energy_prev2=energy_prev;
        energy_prev = curr_energy;
    }
    return energy_prev;
}
    
/*int count_Energy(int n,vector<int> &height){
    vector<int> dp(n+1,-1);
    
    dp[0]=0;
    dp[1]=abs(height[1]-height[0]);
    
    for(int i=2;i<=n;i++){
        int one_step = dp[i-1]+abs(height[i]-height[i-1]);
        int two_step = dp[i-2]+abs(height[i]-height[i-2]);
        dp[i] = min(one_step,two_step);
    }
        return dp[n-1];
}

int count_Energy(int n,vector<int> &height,vector<int> &dp){
    if(n==0) 
        return dp[0]=0;
    
    if(n==1) 
        return dp[1]=abs(height[1]-height[0]);
    
    if(dp[n]!=-1) return dp[n];
    
    int one_step = count_Energy(n-1,height,dp)+abs(height[n]-height[n-1]);
    int two_step = count_Energy(n-2,height,dp)+abs(height[n]-height[n-2]);
    
    return dp[n]=min(one_step,two_step);
}

/*int count_Energy(int n,vector<int> &height){
    if(n==0) 
        return 0;
    if(n==1) 
        return abs(height[1]-height[0]);
    
    int one_step = count_Energy(n-1,height)+abs(height[n]-height[n-1]);
    int two_step = count_Energy(n-2,height)+abs(height[n]-height[n-2]);
    
    return min(one_step,two_step);
}
*/
int main()
{
    vector<int> height = {30,10,60,10,60,50};
    int n = height.size();
    vector<int> dp(n+1,-1);
    cout<<count_Energy(n-1,height);
    return 0;
}
